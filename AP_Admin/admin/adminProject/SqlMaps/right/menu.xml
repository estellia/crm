<?xml version="1.0" encoding="utf-8" ?>
<sqlMap
	namespace="Right.Menu"
	xmlns="http://ibatis.apache.org/mapping"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <alias>
    <typeAlias alias="Menu" type="cpos.Admin.Model.Right.MenuInfo,cpos.Admin.Model" />
  </alias>

  <resultMaps>

    <resultMap id="MenuResult" class="Menu" extends="Base.Operate.ObjectOperateResult">
      <result property="ApplicationID" column="app_id" type="string" />
      <result property="ID" column="menu_id" type="string" />
      <result property="Code" column="menu_code" type="string"/>
      <result property="Name" column="menu_name" type="string"/>
      <result property="EnglishName" column="menu_name_en" type="string" />
      <result property="Level" column="menu_level" type="int" />
      <result property="URLPath" column="url_path" type="string" />
      <result property="IconPath" column="icon_path" type="string" />
      <result property="DisplayIndex" column="display_index" type="int" />
      <result property="CustomerVisible" column="customer_visible" type="int" />
      <result property="Status" column="menu_status" type="int" />  
      <result property="ParentMenuID" column="parent_menu_id" type="string" />
    </resultMap>
    <!--菜单列表返回对象-->
    <resultMap id="MenuResult2" class="Menu" extends="MenuResult">
      <result property="CustomerVisibleDescription" column="customer_visible_desc" type="string" />
      <result property="StatusDescription" column="menu_status_desc" type="string" />
      <result property="Remark" column="remark" type="string" />
      <result property="IsCanAccess" column="isCanAccess" type="int"/>
      <result property="vvMappingMenuId" column="ID" type ="guid"/>
    </resultMap>

    <resultMap id="MenuResult3" class="Menu" extends="MenuResult">
      <result property="CustomerID" column="customer_id" type="string" />
    </resultMap>
    <!--根据行业版本ID获取行业版本对应的菜单信息返回对象-->
    <resultMap id="MenuResult4" class="Menu" >
      <result property="IsCanAccess" column="isCanAccess" type="int"/>
      <result property="vvMappingMenuId" column="ID" type ="guid"/>
    </resultMap>
    <resultMap id="MenuResult5" class="Menu" extends="MenuResult">
      <result property="IsCanAccess" column="isCanAccess" type="int"/>
    </resultMap>

    <resultMap id="MenuResult6" class="Menu" extends="MenuResult">
      <result property="CustomerVisibleDescription" column="customer_visible_desc" type="string" />
      <result property="StatusDescription" column="menu_status_desc" type="string" />
      <result property="Remark" column="remark" type="string" />
    </resultMap>
    <resultMap id="MenuResult7" class="Menu" extends="MenuResult">
      <result property="CustomerVisibleDescription" column="customer_visible_desc" type="string" />
      <result property="StatusDescription" column="menu_status_desc" type="string" />
      <result property="Remark" column="remark" type="string" />
    </resultMap>
    

  </resultMaps>

  <statements>
    <select id="GetAllMenuListByCustomer" resultMap="MenuResult" parameterClass="string">
     select a.*
     from t_def_menu a, t_customer_menu b
     where a.menu_id=b.menu_id and b.customer_id=#value#
    </select>

    <select id="GetAllMenuListByRole" resultMap="MenuResult" parameterClass="string">
      select a.*
      from t_def_menu a, t_role_menu b
      where a.menu_id=b.menu_id and b.role_id=#value#
    </select>

    <select id="GetMenuListByAppCodeAndUserID" resultMap="MenuResult" parameterClass="hashtable">
      select a.*
      from t_def_menu a,
      (
      select b.menu_id from t_role_menu b, t_user_role c, t_def_app d, t_role e
      where b.role_id=c.role_id and c.role_id=e.role_id and e.app_id=d.app_id
      and d.app_code=#AppCode# and c.user_id=#UserID#
      group by b.menu_id
      ) b
      where a.menu_id=b.menu_id
      order by a.menu_level,a.display_index
    </select>

    <select id="GetFirstLevelMenuListByAppCodeAndUserID" resultMap="MenuResult" parameterClass="hashtable">
      select a.*
      from t_def_menu a,
      (
      select b.menu_id from t_role_menu b, t_user_role c, t_def_app d, t_role e
      where b.role_id=c.role_id and c.role_id=e.role_id and e.app_id=d.app_id
      and d.app_code=#AppCode# and c.user_id=#UserID#
      group by b.menu_id
      ) b
      where a.menu_id=b.menu_id and a.menu_level=1
      order by a.display_index
    </select>

    <select id="GetSubMenuListByUserIDAndMenuID" resultMap="MenuResult" parameterClass="hashtable">
      select a.*
      from t_def_menu a,
      (
      select b.menu_id from t_role_menu b, t_user_role c
      where b.role_id=c.role_id and c.user_id=#UserID#
      group by b.menu_id
      ) b
      where a.menu_id=b.menu_id and a.parent_menu_id=#MenuID# AND A.menu_status='1'
      order by a.display_index
    </select>

    <select id="GetAllMenuListByAppID" resultMap="MenuResult" parameterClass="string">
      select a.*
      from t_def_menu a
      where a.app_id=#value# AND  menu_status='1'
    </select>

    <select id="GetAllMenuListByAppCode" resultMap="MenuResult" parameterClass="string">
      select a.*
      from t_def_menu a, t_def_app b
      where a.app_id=b.app_id and b.app_code=#value#
    </select>

    <select id="GetFirstLevelMenuListByAppID" resultMap="MenuResult6" parameterClass="string">
      select a.*,
      b.dd_name as menu_status_desc,
      c.dd_name as customer_visible_desc
      from t_def_menu a
      inner join vw_dic b on b.dic_code='status' and cast(a.menu_status as char)=b.dd_code
      inner join vw_dic c on c.dic_code='yes_no' and cast(a.customer_visible as char)=c.dd_code
      where a.app_id=#value# and menu_level=1
      order by a.display_index
    </select>
<!--根据行业版本获取第一级菜单列表-->
    <select id="GetFirstLevelMenuListByAppIDAndVersion" resultMap="MenuResult2" parameterClass="hashtable">
      select a.app_id, a.menu_id, a.menu_code, a.menu_name, a.menu_name_en,
      a.menu_level, a.url_path, a.icon_path, a.display_index, a.customer_visible, ISNULL(tv.Status,-1) as menu_status ,
      a.parent_menu_id, a.create_user_id, a.create_user_name, a.create_time, a.modify_user_id, a.modify_user_name,
      a.modify_time, a.sys_modify_stamp,a.remark,
      ISNULL(b.dd_name,'停用') as menu_status_desc,
      c.dd_name as customer_visible_desc,ISNULL(tv.IsCanAccess,0) as isCanAccess,tv.ID
      from t_def_menu a
      left join T_VocationVersionMenuMapping tv on tv.AppId = a.app_id and tv.MenuId = a.menu_id and tv.VocaVerMappingID=#VocaVerMappingID#
      left join vw_dic b on b.dic_code='status' and cast(tv.Status as char)=b.dd_code
      inner join vw_dic c on c.dic_code='yes_no' and cast(a.customer_visible as char)=c.dd_code
      where a.app_id=#AppID# and menu_level=1
      order by a.display_index
    </select>
    <!--根据行业版本获取菜单列表-->
    <select id="GetMenuListByAppIDAndVersion" resultMap="MenuResult5" parameterClass="hashtable">
      select a.app_id, a.menu_id, a.menu_code, a.menu_name, a.menu_name_en,
      a.menu_level, a.url_path, a.icon_path, a.display_index, a.customer_visible, ISNULL(tv.Status,-1) as menu_status ,
      a.parent_menu_id, a.create_user_id, a.create_user_name, a.create_time, a.modify_user_id, a.modify_user_name,
      a.modify_time, a.sys_modify_stamp,ISNULL(tv.IsCanAccess,0) as isCanAccess
      from t_def_menu a
      left join T_VocationVersionMenuMapping tv on tv.AppId = a.app_id and tv.MenuId = a.menu_id and tv.VocaVerMappingID=#VocaVerMappingID#
      where a.app_id=#AppID# --and tv.[status] = 1
      order by a.display_index
    </select>

    <select id="GetSubMenuListByMenuID" resultMap="MenuResult7" parameterClass="string">
      select a.*,
      b.dd_name as menu_status_desc,
      c.dd_name as customer_visible_desc
      from t_def_menu a
      inner join vw_dic b on b.dic_code='status' and cast(a.menu_status as char)=b.dd_code
      inner join vw_dic c on c.dic_code='yes_no' and cast(a.customer_visible as char)=c.dd_code
      where a.parent_menu_id=#value#
      order by a.display_index
    </select>
    <!--根据行业版本和上级菜单获取子菜单列表-->
    <select id="GetSubMenuListByAppVersionMenuID" resultMap="MenuResult2" parameterClass="hashtable">
      select a.app_id, a.menu_id, a.menu_code, a.menu_name, a.menu_name_en,
      a.menu_level, a.url_path, a.icon_path, a.display_index, a.customer_visible, ISNULL(tv.Status,-1) as menu_status ,
      a.parent_menu_id, a.create_user_id, a.create_user_name, a.create_time, a.modify_user_id, a.modify_user_name,
      a.modify_time, a.sys_modify_stamp,a.remark,
      ISNULL(b.dd_name,'停用') as menu_status_desc,
      c.dd_name as customer_visible_desc,ISNULL(tv.IsCanAccess,0) as isCanAccess,tv.ID
      from t_def_menu a
      left join T_VocationVersionMenuMapping tv on tv.AppId = a.app_id and tv.MenuId = a.menu_id and tv.VocaVerMappingID=#VocaVerMappingID#
      left join vw_dic b on b.dic_code='status' and cast(tv.Status as char)=b.dd_code
      inner join vw_dic c on c.dic_code='yes_no' and cast(a.customer_visible as char)=c.dd_code
      where a.parent_menu_id=#MenuID# and a.app_id = #AppID#
      order by a.display_index
    </select>

    <select id="GetMenuByID" resultMap="MenuResult7" parameterClass="string">
      select a.*,
      b.dd_name as menu_status_desc,
      c.dd_name as customer_visible_desc
      from t_def_menu a
      inner join vw_dic b on b.dic_code='status' and cast(a.menu_status as char)=b.dd_code
      inner join vw_dic c on c.dic_code='yes_no' and cast(a.customer_visible as char)=c.dd_code
      where a.menu_id=#value#
    </select>

    <select id="ExistMenuCode" parameterClass="hashtable">
      select count(*) from t_def_menu
      where menu_code=#MenuCode#
      <dynamic>
        <isNotNull property="MenuID" prepend="and">
          menu_id &lt;&gt; #MenuID#
        </isNotNull>
      </dynamic>
    </select>
    
    <!--根据行业版本ID获取行业版本对应的菜单信息-->
    <select id="GetVocationVersionMenuMappingByID" resultMap="MenuResult4" parameterClass="Guid">
      SELECT * FROM T_VocationVersionMenuMapping 
      WHERE id=#value#
    </select>
    

    <insert id="InsertRootMenu" parameterClass="Menu">
      insert into t_def_menu(app_id,menu_id,menu_code,menu_name,menu_name_en,menu_level,
      url_path,icon_path,display_index,customer_visible,menu_status,parent_menu_id,
      create_user_id,create_user_name,create_time,remark)
      values(#ApplicationID#,#ID#,#Code#,#Name#,#EnglishName#,1,
      #URLPath#,#IconPath#,#DisplayIndex#,#CustomerVisible#,1,'--',
      #Creater.ID#,#Creater.Name#,getdate(),#Remark#)
    </insert>

    <insert id="InsertSubMenu" parameterClass="Menu">
      insert into t_def_menu(app_id,menu_id,menu_code,menu_name,menu_name_en,menu_level,
      url_path,icon_path,display_index,customer_visible,menu_status,parent_menu_id,
      create_user_id,create_user_name,create_time,remark)
      select app_id,#ID#,#Code#,#Name#,#EnglishName#,menu_level+1,
      #URLPath#,#IconPath#,#DisplayIndex#,#CustomerVisible#,1,menu_id,
      #Creater.ID#,#Creater.Name#,getdate(),#Remark#
      from t_def_menu
      where menu_id=#ParentMenuID#
    </insert>

    <update id="Update" parameterClass="Menu">
      update t_def_menu set
      menu_code=#Code#,
      menu_name=#Name#,
      menu_name_en=#EnglishName#,
      url_path=#URLPath#,
      icon_path=#IconPath#,
      display_index=#DisplayIndex#,
      customer_visible=#CustomerVisible#,
      modify_user_id=#LastEditor.ID#,
      modify_user_name=#LastEditor.Name#,
      modify_time=getdate(),
      remark=#Remark#
      where menu_id=#ID#
    </update>

    <update id="UpdateStatus" parameterClass="hashtable">
      update t_def_menu set
      menu_status = #Status#,
      modify_user_id = #UserID#,
      modify_user_name = #UserName#,
      modify_time=getdate()
      where menu_id=#ID#
    </update>

    <select id="CountSubMenus" parameterClass="hashtable" resultClass="int">
      with t
      as
      (
      select a.*
      from t_def_menu a where a.menu_id=#MenuID#
      union all
      select a.*
      from t_def_menu a inner join t b on a.parent_menu_id=b.menu_id
      )
      select count(*) from t where t.menu_id&lt;&gt;#MenuID#
      <dynamic>
        <isNotNull property="MenuStatus" prepend="and">
          menu_status=#MenuStatus#
        </isNotNull>
      </dynamic>
      ;
    </select>

    <!--修改行业版本菜单状态信息-->
    <update id="UpdateVersionStatus" parameterClass="hashtable">
      update T_VocationVersionMenuMapping
      set [Status] = #Status#
      ,LastUpdateTime = getdate()
      ,LastUpdateBy = #CreateBy#
      where VocaVerMappingID = #VocaVerMappingID# and AppId = #AppID# and MenuId = #MenuID#
    </update>

    <!--根据行业版本ID修改IsCanAccess-->
    <update id="UpdateIsCanAccess" parameterClass="hashtable">
        UPDATE  T_VocationVersionMenuMapping SET IsCanAccess=#IsCanAccess#
        WHERE id=#ID#
    </update>

    <insert id="InsertVersionMenu" parameterClass="hashtable">
      insert into T_VocationVersionMenuMapping(Id, VocaVerMappingID, AppId, MenuId, Status, CreateBy, CreateTime, LastUpdateBy, LastUpdateTime,
      IsDelete)
      values(newid(),#VocaVerMappingID#, #AppID#, #MenuID#, 1, #CreateBy#, getdate(), #CreateBy#, getdate(),0)
    </insert>

    <select id="SelectVersionMenu" parameterClass="hashtable" resultClass="guid">
      select id
      from T_VocationVersionMenuMapping
      where VocaVerMappingID = #VocaVerMappingID# and AppId = #AppID# and MenuId = #MenuID#
    </select>

<!--商户菜单更新发布-->
    <!--根据AppID和商户ID查询商户菜单-->
    <select id="GetMenuListByAppIDAndCustomerID" resultMap="MenuResult3" parameterClass="hashtable">
      select menu_id, reg_app_id as app_id, menu_code, parent_menu_id, menu_level, url_path, icon_path, display_index,
      menu_name, user_flag as customer_visible, menu_eng_name as menu_name_en, status as menu_status, create_user_id,cast(create_time as datetime) as create_time, modify_user_id, cast(modify_time as datetime) as modify_time,
      customer_id,create_user_id as create_user_name,modify_user_id as modify_user_name,getdate() as sys_modify_stamp
      from t_menu
      where customer_id = #CustomerID# and reg_app_id = #AppID#
    </select>
<!--插入菜单-->
    <insert id="InsertCustomerMenu" parameterClass="hashtable">
      insert into t_menu(menu_id, reg_app_id, menu_code, parent_menu_id, menu_level, url_path, icon_path, display_index,
      menu_name, user_flag, menu_eng_name,IsCanAccess,status, create_user_id, create_time, modify_user_id, modify_time,
      customer_id)
      values(#menu_id#, #reg_app_id#, #menu_code#, #parent_menu_id#, #menu_level#, #url_path#, #icon_path#, #display_index#,
      #menu_name#, #user_flag#, #menu_eng_name#,#IsCanAccess#,#status#, #create_user_id#, #create_time#, #create_user_id#, #modify_time#,
      #customer_id#)
    </insert>
    <!--更新菜单-->
    <update id="UpdateCustomerMenu" parameterClass="hashtable">
      update t_menu
      set [parent_menu_id] = #parent_menu_id#
      ,[menu_level] = #menu_level#
      ,[url_path] = #url_path#
      ,[icon_path] = #icon_path#
      ,[display_index] = #display_index#
      ,[menu_name] = #menu_name#
      ,[user_flag] = #user_flag#
      ,[menu_eng_name] = #menu_eng_name#
      ,[IsCanAccess]=#IsCanAccess#
      ,[status] = #status#
      ,[modify_user_id] = #modify_user_id#
      ,[modify_time] = #modify_time#
      where customer_id = #customer_id# and reg_app_id = #reg_app_id# and menu_code = #menu_code#
    </update>
    
    <!--更新现有菜单-->
    <update id="UpdateCustomerMenuByMenuID" parameterClass="hashtable">
      update t_menu
      set [menu_code] = #menu_code#
      ,[parent_menu_id] = #parent_menu_id#
      ,[menu_level] = #menu_level#
      ,[url_path] = #url_path#
      ,[icon_path] = #icon_path#
      ,[display_index] = #display_index#
      ,[menu_name] = #menu_name#
      ,[user_flag] = #user_flag#
      ,[menu_eng_name] = #menu_eng_name#
      ,[IsCanAccess]=#IsCanAccess#
      ,[status] = #status#
      ,[modify_user_id] = #modify_user_id#
      ,[modify_time] = #modify_time#
      where menu_id = #menu_id#
    </update>

    <update id="UpdateNoVersionCustomerMenu" parameterClass="hashtable">
      update t_menu
      set [parent_menu_id] = #parent_menu_id#
      ,[menu_level] = #menu_level#
      ,[url_path] = #url_path#
      ,[icon_path] = #icon_path#
      ,[display_index] = #display_index#
      ,[menu_name] = #menu_name#
      ,[user_flag] = #user_flag#
      ,[menu_eng_name] = #menu_eng_name#
      ,[status] = #status#
      ,[modify_user_id] = #modify_user_id#
      ,[modify_time] = #modify_time#
      where customer_id = #customer_id# and reg_app_id = #reg_app_id# and menu_code = #menu_code#
    </update>
    
  </statements>
</sqlMap>